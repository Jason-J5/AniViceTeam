{"ast":null,"code":"import React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Settingscreen = function Settingscreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(TouchableOpacity, {\n    children: _jsx(Text, {\n      children: \"HIIII\"\n    })\n  });\n};\n\nexport default Settingscreen;","map":{"version":3,"sources":["/Users/christopherovalle/projects/AniVice/Screens/Profile.js"],"names":["React","Settingscreen","navigation"],"mappings":"AA+PA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAGA,IAAOC,aAAa,GAAG,SAAhBA,aAAgB,OAAiB;AAAA,MAAfC,UAAe,QAAfA,UAAe;AAEtC,SACE,KAAC,gBAAD;AAAA,cACI,KAAC,IAAD;AAAA;AAAA;AADJ,IADF;AAKC,CAPH;;AAQE,eAAeD,aAAf","sourcesContent":["//import React, { useContext, useState, useEffect } from \"react\";\n//import {\n//  View,\n//  Text,\n//  Button,\n//  StyleSheet,\n//  TouchableOpacity,\n//  Dimensions,\n//  ScrollView,\n//  RefreshControl\n//} from \"react-native\";\n//import { Avatar, Title, Caption, TouchableRipple, Card, Paragraph } from \"react-native-paper\";\n//import { SettingsIcon } from \"../App/components/settingsIcon\";\n//import { NavigationContainer, useIsFocused } from '@react-navigation/native';\n//import { SafeAreaView } from \"react-native-safe-area-context\";\n//import avatarPicture from \"../assets/avatar.png\";\n//import AsyncStorage from '@react-native-async-storage/async-storage';\n//import Toast from 'react-native-toast-message';\n//import { getAuth } from \"firebase/auth\";\n\n//const windowWidth = Dimensions.get(\"window\").width;\n//const windowHeight = Dimensions.get(\"window\").height;\n\n//const Settingscreen = ({ navigation }) => {\n\n//  const isFocused = useIsFocused();\n//  const [localStorage, SetLocalStorage] = React.useState([]);\n\n//  const [username, setUsername] = React.useState(\"\");\n//  const [icon, setIcon] = React.useState(\"https://www.plattsburgh.edu/files/307/images/new-burghy-p-logo.png\")\n\n\n\n//  const refresh = () => {\n//    fetchFromLocalStorage().then((val) => {\n//      SetLocalStorage(val);\n//    });\n//  }\n\n//  const removeSavedDigest = async (digest) => {\n//    try {\n//      await AsyncStorage.removeItem(digest)\n//    } catch(e) {\n//      // remove error\n//    }\n  \n//    console.log(digest, \"has been removed\");\n//  }\n\n//  const getAllKeys = async () => {\n//    let keys = []\n//    try {\n//      keys = await AsyncStorage.getAllKeys()\n//    } catch(e) {\n//      // read key error\n//    }\n//    return keys;\n//  }\n\n//  const getAllValues = async (keys) => {\n//    let values\n//    try {\n//      values = await AsyncStorage.multiGet(keys)\n//    } catch(e) {\n//      // read error\n//    }\n//    return values;\n//  }\n\n//  const fetchFromLocalStorage = async () => {\n//    const keys = await getAllKeys();\n//    const values = await getAllValues(keys);\n//    return values;\n//  }\n\n//  const makeCards = () => {\n//    if(localStorage.length < 1){\n//      return (\n//        <View style={styles.emptyDigestView}>\n//          <Text style={styles.emptyDigest}>Looks like you haven't saved anything.</Text>\n//          <Text style={styles.emptyDigest}>Long press on a digest to save it!</Text>\n//        </View>\n//      )\n//    }\n//    return localStorage.map((digest, i) => {\n//      const parsed = JSON.parse(digest[1]);\n//      if(parsed[\"t\"] == null || parsed[\"d\"] == null || parsed[\"pic\"] == null){\n//        return(<Text key={i}></Text>)\n//      }\n//      return(\n//        <Card style = {styles.cardStyle} elevation = {2} onPress = {() => {\n//          navigation.navigate(\"SeeMore\", {t: parsed[\"t\"], d: parsed[\"d\"], pic: parsed[\"pic\"]});\n//          }} key = {i} \n//          onLongPress = {() => {\n//            removeSavedDigest(parsed[\"t\"]);\n//            refresh();\n//            Toast.show({\n//              type: 'success',\n//              text1: 'Digest Deleted! 🗑️',\n//              text2: parsed[\"t\"]\n//            });\n//          }}\n//        >\n//          <Card.Cover source={{ uri: parsed[\"pic\"] }} style={styles.test}/>\n//          <Card.Content>\n//              <Title>{parsed[\"t\"].slice(0,50)}...</Title>\n//          </Card.Content>\n//      </Card>\n//      );\n//    });\n//  }\n\n//  const setUserCred = () => {\n//    const auth = getAuth();\n//    const user = auth.currentUser;\n//    if(user !== null){\n//      const displayName = user.displayName;\n//      const photoURL = user.photoURL;\n//      setUsername(displayName);\n//      setIcon(photoURL);\n//      console.log(user.uid, \"<------\");\n//      console.log(user.displayName, \"<------\");\n//    }\n//  }\n\n\n//  React.useEffect(() => {\n//    fetchFromLocalStorage().then((val) => {\n//      SetLocalStorage(val);\n//    });\n//    setUserCred();\n//    console.log(username, \"<------\");\n//    console.log(icon, \"<------\");\n//    return () => {};\n//  }, [isFocused]);\n\n\n//  let imageUrl = \"\";\n//  return (\n//    <SafeAreaView style={styles.container}>\n//      <View style={styles.Settingview}>\n//        <SettingsIcon style={styles.button} navigation={navigation} size={10} />\n//      </View>\n//      <View style={styles.userInfoSection}>\n//        <View style={{ flexDirection: \"column\" }}>\n//          <TouchableOpacity\n//            onPress={() => navigation.navigate(\"Profiles\")}\n//            navigation={navigation}\n//          >\n//            <View style={styles.profileCircle}>\n//              <Avatar.Image\n//                navigation={navigation}\n//                source={{ uri: icon }}\n//                size={145}\n//                marginLeft={0}\n//              />\n//            </View>\n//          </TouchableOpacity>\n//          <View style={{ marginLeft: 0, justifyContent: 'center', alignItems: 'center', }}>\n//            <Title\n//              style={[\n//                styles.title,\n//                {\n//                  marginTop: 30,\n//                },\n//              ]}\n//            >\n//              {username}\n//            </Title>\n//            <View>\n//              <Caption> @ Plattsburgh </Caption>\n//            </View>\n//          </View>\n//        </View>\n//      </View>\n//      <View style={styles.userInfoSection}>\n//      </View>\n//      <Title>Saved Digest</Title>\n//      <ScrollView horizontal = {true} style = {styles.scrollViewStyle} contentContainerStyle={styles.ctcs}>\n//        {/* <Text></Text> */}\n//        {makeCards()}\n//      </ScrollView>\n//    </SafeAreaView>\n//  );\n//};\n//export default Settingscreen;\n\n//const styles = StyleSheet.create({\n//  container: {\n//    flex: 1,\n//    alignItems: \"center\",\n//    paddingTop: - (windowHeight/30),\n//    //paddingBottom: - (windowHeight/30),\n//    backgroundColor: \"#FAF9F6\",\n//  },\n//  userInfoSection: {\n//    paddingHorizontal: 30,\n//    marginBottom: 15,\n//    display: \"flex\",\n//    flexDirection: \"row\",\n//  },\n//  button: {\n//    alignItems: \"flex-end\",\n//  },\n//  profileCircle: {\n//    //marginLeft: windowWidth / 15,\n//  },\n//  Settingview: {\n//    display: \"flex\",\n//    flexDirection: \"row-reverse\",\n//    width: \"100%\",\n//  },\n//  cardStyle: {\n//    borderRadius: 20,\n//    shadowColor: '#000',\n//    shadowOffset: { width: 0, height: 5 },\n//    shadowOpacity: 0.8,\n//    shadowRadius: 3,\n//    elevation: 5,\n//    width: 300,\n//    margin: 10,\n//    height: windowHeight / 3.8,\n//},\n//  test: {\n//    borderTopLeftRadius: 20,\n//    borderTopRightRadius: 20,\n//    height: windowHeight / 7.4,\n//  },\n//  scrollViewStyle: {\n//    //marginTop: 10,\n//    backgroundColor: \"white\",\n//    width: \"100%\",\n//    elevation: 5,\n//    borderTopLeftRadius: 30,\n//    borderTopRightRadius: 30,\n//  },\n//  ctcs: {\n//    justifyContent: \"center\",\n//    alignItems: \"flex-start\"\n//  },\n//  viewtester: {\n//    marginTop: 10,\n//    backgroundColor: \"white\",\n//    width: \"100%\",\n//    elevation: 5,\n//    borderTopLeftRadius: 30,\n//    borderTopRightRadius: 30,\n//  },\n//  emptyDigest:{\n//    color: \"grey\",\n//  },\n//  emptyDigestView: {\n//    margin: windowWidth / 4\n//  }\n//});\nimport React from \"react\";\nimport { Text,View,Button,Alert,TouchableOpacity} from \"react-native\";\n\nconst  Settingscreen = ({navigation}) =>{\n    \n  return(\n    <TouchableOpacity>\n        <Text>HIIII</Text>\n    </TouchableOpacity>\n  );\n  }\n  export default Settingscreen;\n"]},"metadata":{},"sourceType":"module"}