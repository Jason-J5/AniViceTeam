{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ItemSeparator from \"../components/ItemSeperator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar setWidth = function setWidth(w) {\n  return width / 100 * w;\n};\n\nvar setHeight = function setHeight(h) {\n  return height / 100 * h;\n};\n\nvar UpcomingScreen = function UpcomingScreen() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      airingNow = _React$useState2[0],\n      SetAiring = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      topAnime = _React$useState4[0],\n      SetTopAnime = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      upcoming = _React$useState6[0],\n      SetUpcoming = _React$useState6[1];\n\n  React.useEffect(function () {\n    fetch(\"https://api.jikan.moe/v4/seasons/now\").then(function (re) {\n      return re.json();\n    }).then(function (re) {\n      SetAiring(re.data);\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.container2,\n    children: _jsx(FlatList, {\n      style: styles.flatlist,\n      data: airingNow,\n      ItemSeparatorComponent: function ItemSeparatorComponent() {\n        return _jsx(ItemSeparator, {\n          height: 10,\n          width: 20\n        });\n      },\n      ListHeaderComponent: function ListHeaderComponent() {\n        return _jsx(ItemSeparator, {\n          height: 20\n        });\n      },\n      ListFooterComponent: function ListFooterComponent() {\n        return _jsx(ItemSeparator, {\n          height: 30\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return String(item.mal_id);\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(View, {\n          children: [_jsx(TouchableOpacity, {\n            style: styles.container,\n            children: _jsx(Image, {\n              source: {\n                uri: item.images.jpg.image_url\n              },\n              style: styles.container,\n              resizeMode: \"cover\"\n            })\n          }), _jsx(View, {\n            style: {\n              width: setWidth(30)\n            },\n            children: _jsx(Text, {\n              style: styles.container3,\n              ellipsizeMode: \"tail\",\n              numberOfLines: 1,\n              children: item.title\n            })\n          })]\n        });\n      },\n      numColumns: 3,\n      showsHorizontalScrollIndicator: false\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 12,\n    backgroundColor: \"#057DFE\",\n    paddingVertical: 8,\n    elevation: 5,\n    marginHorizontal: 4,\n    width: setWidth(30),\n    height: setHeight(18)\n  },\n  container2: {\n    margin: 8\n  },\n  container3: {\n    margin: 10\n  },\n  flatlist: {\n    flexDirection: 'column'\n  }\n});\nexport default UpcomingScreen;","map":{"version":3,"sources":["/Users/christopherovalle/projects/AniVice/Screens/Upcoming.js"],"names":["React","ItemSeparator","Dimensions","get","width","height","setWidth","w","setHeight","h","UpcomingScreen","useState","airingNow","SetAiring","topAnime","SetTopAnime","upcoming","SetUpcoming","useEffect","fetch","then","re","json","data","styles","container2","flatlist","item","String","mal_id","container","uri","images","jpg","image_url","container3","title","StyleSheet","create","justifyContent","alignItems","borderRadius","backgroundColor","paddingVertical","elevation","marginHorizontal","margin","flexDirection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Text,View,Button,Alert,TouchableOpacity,ScrollView,StyleSheet,FlatList,Dimensions} from \"react-native\";\nimport ItemSeparator from \"../components/ItemSeperator\";\n\n\n\nconst { width,height } = Dimensions.get(\"screen\");\n\nconst setWidth = (w) => (width / 100) * w;\nconst setHeight = (h) => (height / 100) * h;\n\nconst UpcomingScreen = () => {\n    const [ airingNow, SetAiring] = React.useState([]);\n    const [topAnime, SetTopAnime] = React.useState([]);\n    const [ upcoming, SetUpcoming] = React.useState([]);\n    React.useEffect(()=>{\n        fetch(`https://api.jikan.moe/v4/seasons/now`)\n        .then(re => re.json())\n        .then((re) => {\n          SetAiring(re.data);\n    \n      })\n    },[]);\n    return(\n        \n        <View style={styles.container2}>\n            <FlatList style={styles.flatlist} \n                data={airingNow}\n                ItemSeparatorComponent={() =><ItemSeparator height={10}width={20}/>}\n                ListHeaderComponent={() =><ItemSeparator height={20}/>}\n                ListFooterComponent={() =><ItemSeparator height={30}/>}\n                keyExtractor={(item) => String(item.mal_id)}\n                renderItem={({item}) => (   \n                <View>\n                <TouchableOpacity style = {styles.container}>\n                    <Image\n                    source={{\n                        uri: item.images.jpg.image_url,\n                    }}\n                    style={styles.container}\n                    resizeMode=\"cover\"\n                />\n            </TouchableOpacity>\n                <View style={{width: setWidth(30)}}>\n                \n                <Text style = {styles.container3}ellipsizeMode='tail' numberOfLines={1}>\n                    {item.title}\n                </Text>\n\n                </View>\n        \n        </View>)}\n                numColumns={3}\n                showsHorizontalScrollIndicator={false}/>\n\n        </View>\n \n    );\n}\n\n    \n        \n\n\nconst styles = StyleSheet.create({\n    container: {\n        //margin:10,\n        justifyContent: \"center\",\n        alignItems:\"center\",\n        borderRadius: 12,\n        backgroundColor: \"#057DFE\",\n        paddingVertical: 8,\n        elevation: 5,\n        marginHorizontal:4,\n        width:setWidth(30), \n        height:setHeight(18)\n\n\n    },\n    container2:{\n        margin:8,\n    },\n    container3:{\n        margin:10,\n\n\n    },\n\n\n    flatlist: {\n        flexDirection: 'column',\n\n    },\n\n\n});\n\nexport default UpcomingScreen;"]},"metadata":{},"sourceType":"module"}