{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport React from 'react';\nimport WatchList from \"../Screens/WatchList\";\nimport Profile from \"../Screens/Profile\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Community from \"../Screens/Community\";\nimport Discover from \"../Screens/Discover\";\nimport AiringScreen from \"../Screens/Airing\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar Tabs = function Tabs(props) {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home-sharp' : 'home-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person-circle' : 'person-circle-outline';\n          } else if (route.name == 'Watchlist') {\n            iconName = focused ? 'list-circle' : 'list-circle-outline';\n          } else if (route.name == 'Community') {\n            iconName = focused ? 'people-sharp' : 'people-outline';\n          } else if (route.name == 'Discover') {\n            iconName = focused ? 'search' : 'search-outline';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#057DFE\",\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    initialRouteName: \"Home\",\n    children: [_jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: Profile\n    }), _jsx(Tab.Screen, {\n      name: \"Community\",\n      component: Community\n    }), _jsx(Tab.Screen, {\n      name: \"Discover\",\n      component: Discover\n    }), _jsx(Tab.Screen, {\n      name: \"Watchlist\",\n      component: WatchList\n    })]\n  });\n};\n\nexport default Tabs;","map":{"version":3,"sources":["/Users/christopherovalle/projects/AniVice/components/tabs.js"],"names":["createBottomTabNavigator","React","WatchList","Profile","Ionicons","Community","Discover","AiringScreen","Tab","Tabs","props","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,SAASC,QAAT,QAAwB,oBAAxB;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,YAAP;;;AAEA,IAAMC,GAAG,GAAGR,wBAAwB,EAApC;;AAEA,IAAMS,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,SACE,MAAC,GAAD,CAAK,SAAL;AAAe,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAACC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACvF,cAAIC,QAAJ;;AACA,cAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AACvBD,YAAAA,QAAQ,GAAGH,OAAO,GACd,YADc,GAEd,cAFJ;AAGH,WAJD,MAKK,IAAIF,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;AAC/BD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,eAAH,GAAqB,uBAAvC;AACH,WAFI,MAGA,IAAGF,KAAK,CAACM,IAAN,IAAc,WAAjB,EAA6B;AAChCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,aAAH,GAAmB,qBAArC;AACD,WAFI,MAGA,IAAIF,KAAK,CAACM,IAAN,IAAc,WAAlB,EAA8B;AACjCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,cAAH,GAAoB,gBAAtC;AACD,WAFI,MAIA,IAAIF,KAAK,CAACM,IAAN,IAAc,UAAlB,EAA6B;AAChCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,QAAH,GAAc,gBAAhC;AACD;;AAIC,iBAAO,KAAC,QAAD;AAAU,YAAA,IAAI,EAAEG,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED;AAA7C,YAAP;AACD,SAxB2C;AAyB5CI,QAAAA,qBAAqB,EAAE,SAzBqB;AA0B5CC,QAAAA,uBAAuB,EAAE;AA1BmB,OAAhB;AAAA,KAA9B;AA0BuC,IAAA,gBAAgB,EAAG,MA1B1D;AAAA,eA2BE,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAG,SAAnB;AAA6B,MAAA,SAAS,EAAIhB;AAA1C,MA3BF,EA4BE,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAG,WAAnB;AAA+B,MAAA,SAAS,EAAIE;AAA5C,MA5BF,EA6BE,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAG,UAAnB;AAA8B,MAAA,SAAS,EAAIC;AAA3C,MA7BF,EA8BE,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAG,WAAnB;AAA+B,MAAA,SAAS,EAAIJ;AAA5C,MA9BF;AAAA,IADF;AAoCD,CArCD;;AAuCA,eAAeO,IAAf","sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport React from 'react';\nimport WatchList from '../Screens/WatchList';\nimport Profile from '../Screens/Profile';\nimport { Ionicons} from '@expo/vector-icons';\nimport Community from '../Screens/Community';\nimport Discover from '../Screens/Discover';\nimport AiringScreen from '../Screens/Airing';\n\nconst Tab = createBottomTabNavigator();\n        \nconst Tabs = (props) => {\n  return(\n    <Tab.Navigator screenOptions={({ route }) => ({tabBarIcon: ({ focused, color, size }) => {\n      let iconName;\n      if (route.name === 'Home') {\n          iconName = focused\n            ? 'home-sharp'\n            : 'home-outline';\n      }\n      else if (route.name === 'Profile') {\n          iconName = focused ? 'person-circle' : 'person-circle-outline';\n      }\n      else if(route.name == 'Watchlist'){\n        iconName = focused ? 'list-circle' : 'list-circle-outline';\n      }\n      else if (route.name == 'Community'){\n        iconName = focused ? 'people-sharp' : 'people-outline';\n      }\n\n      else if (route.name == 'Discover'){\n        iconName = focused ? 'search' : 'search-outline';\n      }\n\n        \n\n        return <Ionicons name={iconName} size={size} color={color} />;\n      },\n      tabBarActiveTintColor: \"#057DFE\",\n      tabBarInactiveTintColor: 'gray', })} initialRouteName = \"Home\">\n      <Tab.Screen name = \"Profile\" component = {Profile} />\n      <Tab.Screen name = \"Community\" component = {Community}/>\n      <Tab.Screen name = \"Discover\" component = {Discover}/>\n      <Tab.Screen name = \"Watchlist\" component = {WatchList}/>\n    </Tab.Navigator> \n  );\n\n\n}\n\nexport default Tabs;"]},"metadata":{},"sourceType":"module"}