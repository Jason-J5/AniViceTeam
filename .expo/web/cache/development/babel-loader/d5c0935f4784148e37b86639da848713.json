{"ast":null,"code":"import React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Community = function Community(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(TouchableOpacity, {\n    children: _jsx(Text, {\n      children: \"HIIII\"\n    })\n  });\n};\n\nexport default Community;","map":{"version":3,"sources":["/Users/christopherovalle/projects/AniVice/Screens/Community.js"],"names":["React","Community","navigation"],"mappings":"AAmGA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAEA,IAAOC,SAAS,GAAG,SAAZA,SAAY,OAAiB;AAAA,MAAfC,UAAe,QAAfA,UAAe;AAEpC,SACE,KAAC,gBAAD;AAAA,cACI,KAAC,IAAD;AAAA;AAAA;AADJ,IADF;AAKC,CAPD;;AAQA,eAAeD,SAAf","sourcesContent":["//import React, { useState, useEffect } from 'react';\n//import { View, Text, Button, StyleSheet,ScrollView, ActivityIndicator, TouchableOpacity} from 'react-native';\n////import {MyButton} from '../App/components/dummyButton';\n//import { Cards } from '../App/components/card.component';\n//import { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\"\n//import {API_KEY,MSI,APP_ID} from \"@env\";\n\n//import firebase from 'firebase/compat/app';\n//import 'firebase/compat/auth';\n//import 'firebase/compat/firestore';\n\n//import AsyncStorage from '@react-native-async-storage/async-storage';\n//import Toast from 'react-native-toast-message';\n\n//const firebaseConfig = {\n//  apiKey: `${API_KEY}`,\n//  authDomain: \"student-digest-app.firebaseapp.com\",\n//  databaseURL: \"https://student-digest-app-default-rtdb.firebaseio.com\",\n//  projectId: \"student-digest-app\",\n//  storageBucket: \"student-digest-app.appspot.com\",\n//  messagingSenderId: `${MSI}`,\n//  appId: `${APP_ID}`,\n//  measurementId: \"${config.measurementId}\"\n//};\n\n//// Initialize Firebase\n//  if (!firebase.apps.length) {\n//    firebase.initializeApp(firebaseConfig);\n//  }else {\n//    firebase.app(); // if already initialized, use that one\n//  }\n////firebase.initializeApp(firebaseConfig);\n\n//const db = getFirestore();\n\n\n\n//const Homescreen = ({navigation}) => {\n//  const [itemsArray, setItemsArray] = React.useState([]);\n//  const [isLoading, setLoading] = React.useState(true);\n//  const fecthData = async () => {\n//    let temp = [];\n//    const querySnapshot = await getDocs(collection(db, \"digest\"));\n//    querySnapshot.forEach((doc) => {\n//      temp.push(doc.data());\n//    });\n//    setItemsArray(temp);\n//    setLoading(false);\n//  }\n//  React.useEffect(() => {\n//    fecthData();\n//    return () => {};\n//  }, []);\n\n//  const makeCards = () => {\n//    return itemsArray.map((digest, i) => {\n//      if(digest[\"title\"] == null || digest[\"description\"] == null || digest[\"imageOverlay\"] == null){\n//        return (<Text key={i}></Text>)\n//      }\n//      try{\n//        return(\n//          <Cards\n//            navigation = {navigation}\n//            name = {digest[\"title\"]}\n//            des = {digest[\"description\"]}\n//            img = {digest[\"imageOverlay\"]}\n//            key = {i}\n//          />\n//        );\n//      }catch(err){\n//        console.log(\"Card could not be filled\")\n//      }\n//    });\n//  }\n\n\n//  return(\n//    <ScrollView>\n//      <View style = {styles.container}>\n//        {isLoading ? <ActivityIndicator size=\"large\" color=\"#de706f\" /> : makeCards()}\n//      </View>\n//    </ScrollView>\n//  );\n//};   \n//export default Homescreen;\n\n\n//const styles = StyleSheet.create({\n//      container: {\n//        margin: 10,\n//        flex: 1,\n//        //alignItems: 'center',\n//        justifyContent: 'center',\n\n//      },\n\n//    });\n\n\nimport React from \"react\";\nimport { Text,View,Button,Alert,TouchableOpacity} from \"react-native\";\nconst  Community = ({navigation}) =>{\n    \nreturn(\n  <TouchableOpacity>\n      <Text>HIIII</Text>\n  </TouchableOpacity>\n);\n}\nexport default Community;\n"]},"metadata":{},"sourceType":"module"}